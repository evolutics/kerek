- name: Do provisioning
  hosts: all
  vars:
    deploy_user:
    upgrade_packages:

  tasks:
    - name: Provision packages
      become: true
      block:
        - name: Manage packages
          ansible.builtin.apt:
            pkg:
              - acl
              - ufw
              - unattended-upgrades
            update_cache: true

        - name: Upgrade packages
          ansible.builtin.apt:
            upgrade: safe
          when: upgrade_packages

    - name: Provision access
      block:
        - name: Manage group
          become: true
          ansible.builtin.group:
            name: "{{ deploy_user }}"

        - name: Manage user
          become: true
          ansible.builtin.user:
            group: "{{ deploy_user }}"
            name: "{{ deploy_user }}"
            shell: /bin/bash

        - name: Read authorized SSH keys
          ansible.builtin.slurp:
            src: "/home/{{ ansible_user_id }}/.ssh/authorized_keys"
          register: ssh_authorized_keys

        - name: Write authorized SSH keys
          become: true
          ansible.posix.authorized_key:
            key: "{{ ssh_authorized_keys.content | b64decode }}"
            user: "{{ deploy_user }}"

        - name: Configure OpenSSH daemon
          become: true
          ansible.builtin.lineinfile:
            line: "PermitRootLogin no"
            path: /etc/ssh/sshd_config
            regexp: '\bPermitRootLogin\b'
          notify: Restart OpenSSH daemon

    - name: Provision container platform
      become: true
      block:
        - name: Enable user lingering # noqa no-changed-when
          ansible.builtin.command:
            argv:
              - loginctl
              - enable-linger
              - "{{ deploy_user }}"

        - name: Reduce unprivileged port start
          ansible.posix.sysctl:
            name: net.ipv4.ip_unprivileged_port_start
            value: "80"

    - name: Provision Podman
      become: true
      block:
        - name: Manage Podman APT key
          ansible.builtin.apt_key:
            url: "https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_distribution_version }}/Release.key"

        - name: Manage Podman APT repository
          ansible.builtin.apt_repository:
            repo: "deb https://download.opensuse.org/repositories/devel:kubic:libcontainers:unstable/xUbuntu_{{ ansible_distribution_version }}/ /"

        - name: Manage Podman APT package
          ansible.builtin.apt:
            pkg: podman

        - name: Manage socket activation of Podman API service
          ansible.builtin.systemd:
            enabled: true
            name: podman.socket
            scope: user
            state: started
          become_user: "{{ deploy_user }}"

        - name: Link Docker to Podman
          ansible.builtin.file:
            dest: /usr/local/bin/docker
            src: /usr/bin/podman
            state: link

    - name: Provision firewall
      become: true
      block:
        - name: Configure firewall in general
          community.general.ufw:
            default: deny
            direction: incoming
            state: enabled

        - name: Configure firewall exceptions
          community.general.ufw:
            direction: in
            rule: allow
            to_port: "{{ item }}"
          loop:
            - http
            - https
            - ssh

  handlers:
    - name: Restart OpenSSH daemon
      become: true
      ansible.builtin.systemd:
        name: ssh
        state: restarted

- name: Reboot if required
  hosts: all
  tasks:
    - name: Get reboot status
      ansible.builtin.stat:
        path: /var/run/reboot-required
      register: reboot_required

    - name: Reboot if required according to status
      become: true
      ansible.builtin.reboot:
      when: reboot_required.stat.exists

- name: Test provisioning
  hosts: all
  vars:
    provision_test:
  tasks:
    - name: Run script
      ansible.builtin.script: "{{ provision_test }}"
      environment:
        WHEELSTICKS_DEPLOY_USER: "{{ deploy_user }}"
      register: result
      until: result.rc == 0
